name: 'Terraform validate'

on:
  push:
    branches:
      - '**'

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout


jobs:
  terraform_validate:
    name: 'terraform_validate'
    runs-on: ubuntu-latest
    env:
      TERRAFORM_VERSION: 1.3.9
      TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}
      TF_STATE_KEY: psoxy

      # NOTE: this role must be configured with trust policy, per https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
      # have sufficient perms, per https://github.com/Worklytics/psoxy/blob/main/docs/aws/getting-started.md#prerequisites
      # and you must have added GitHub as an OIDC provider in the AWS Account
      AWS_REGION: ${{ vars.AWS_REGION }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: 'setup Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      # use https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
      - id: aws-oidc
        name: 'authenticate to AWS'
        uses: aws-actions/configure-aws-credentials@v2
        if: ${{ env.AWS_ACCOUNT_ID != null }}
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Terraform - validate'
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_STATE_BUCKET}},key=${{ env.TF_STATE_KEY }},region=${{ env.AWS_REGION }}"
          terraform validate


